*> Profile Validation Module
IDENTIFICATION DIVISION.
PROGRAM-ID. PROFILE-VALIDATION.

DATA DIVISION.
WORKING-STORAGE SECTION.
COPY "AccountRecord.cpy".

01  VALIDATION-FLAGS.
    05  VF-FIRST-NAME      PIC X VALUE "N".
    05  VF-LAST-NAME       PIC X VALUE "N".
    05  VF-UNIVERSITY      PIC X VALUE "N".
    05  VF-MAJOR           PIC X VALUE "N".
    05  VF-GRADUATION-YEAR PIC X VALUE "N".

01  VALIDATION-COUNTERS.
    05  VC-FIRST-NAME-LEN  PIC 99 VALUE 0.
    05  VC-LAST-NAME-LEN   PIC 99 VALUE 0.
    05  VC-UNIVERSITY-LEN  PIC 99 VALUE 0.
    05  VC-MAJOR-LEN       PIC 99 VALUE 0.

01  VALIDATION-LIMITS.
    05  VL-MIN-GRAD-YEAR   PIC 9(4) VALUE 1900.
    05  VL-MAX-GRAD-YEAR   PIC 9(4) VALUE 2100.
    05  VL-MIN-NAME-LEN     PIC 9 VALUE 1.
    05  VL-MAX-NAME-LEN     PIC 99 VALUE 25.
    05  VL-MIN-UNIV-LEN     PIC 9 VALUE 1.
    05  VL-MAX-UNIV-LEN     PIC 99 VALUE 50.
    05  VL-MIN-MAJOR-LEN    PIC 9 VALUE 1.
    05  VL-MAX-MAJOR-LEN    PIC 99 VALUE 50.

01  VALIDATION-RESPONSE    PIC X(200).
01  VALIDATION-STATUS      PIC X VALUE "N".

LINKAGE SECTION.
01  L-PROFILE-DATA         PIC X(500).
01  L-VALIDATION-STATUS    PIC X.
01  L-VALIDATION-RESPONSE  PIC X(200).

PROCEDURE DIVISION USING L-PROFILE-DATA L-VALIDATION-STATUS L-VALIDATION-RESPONSE.
    MOVE "N" TO VALIDATION-STATUS
    MOVE SPACES TO VALIDATION-RESPONSE

    *> Initialize validation flags
    MOVE "N" TO VF-FIRST-NAME
    MOVE "N" TO VF-LAST-NAME
    MOVE "N" TO VF-UNIVERSITY
    MOVE "N" TO VF-MAJOR
    MOVE "N" TO VF-GRADUATION-YEAR

    *> Parse profile data from input string
    PERFORM PARSE-PROFILE-DATA

    *> Validate all required fields
    PERFORM VALIDATE-FIRST-NAME
    PERFORM VALIDATE-LAST-NAME
    PERFORM VALIDATE-UNIVERSITY
    PERFORM VALIDATE-MAJOR
    PERFORM VALIDATE-GRADUATION-YEAR

    *> Check if all validations passed
    IF VF-FIRST-NAME = "Y" AND VF-LAST-NAME = "Y" AND
       VF-UNIVERSITY = "Y" AND VF-MAJOR = "Y" AND VF-GRADUATION-YEAR = "Y"
        MOVE "Y" TO VALIDATION-STATUS
        MOVE "Profile validation successful!" TO VALIDATION-RESPONSE
    ELSE
        MOVE "Profile validation failed. Please check required fields." TO VALIDATION-RESPONSE
    END-IF

    MOVE VALIDATION-STATUS TO L-VALIDATION-STATUS
    MOVE VALIDATION-RESPONSE TO L-VALIDATION-RESPONSE

    GOBACK.

PARSE-PROFILE-DATA.
    *> Parse the input string into profile fields
    *> Format: "FIRST_NAME|LAST_NAME|UNIVERSITY|MAJOR|GRAD_YEAR|ABOUT_ME"
    UNSTRING L-PROFILE-DATA DELIMITED BY "|"
        INTO AR-FIRST-NAME AR-LAST-NAME AR-UNIVERSITY
             AR-MAJOR AR-GRADUATION-YEAR AR-ABOUT-ME
    END-UNSTRING
    EXIT PARAGRAPH.

VALIDATE-FIRST-NAME.
    *> Check if first name is not empty and within length limits
    IF AR-FIRST-NAME NOT = SPACES AND AR-FIRST-NAME NOT = LOW-VALUES
        MOVE FUNCTION LENGTH(FUNCTION TRIM(AR-FIRST-NAME)) TO VC-FIRST-NAME-LEN
        IF VC-FIRST-NAME-LEN >= VL-MIN-NAME-LEN AND VC-FIRST-NAME-LEN <= VL-MAX-NAME-LEN
            MOVE "Y" TO VF-FIRST-NAME
        END-IF
    END-IF
    EXIT PARAGRAPH.

VALIDATE-LAST-NAME.
    *> Check if last name is not empty and within length limits
    IF AR-LAST-NAME NOT = SPACES AND AR-LAST-NAME NOT = LOW-VALUES
        MOVE FUNCTION LENGTH(FUNCTION TRIM(AR-LAST-NAME)) TO VC-LAST-NAME-LEN
        IF VC-LAST-NAME-LEN >= VL-MIN-NAME-LEN AND VC-LAST-NAME-LEN <= VL-MAX-NAME-LEN
            MOVE "Y" TO VF-LAST-NAME
        END-IF
    END-IF
    EXIT PARAGRAPH.

VALIDATE-UNIVERSITY.
    *> Check if university is not empty and within length limits
    IF AR-UNIVERSITY NOT = SPACES AND AR-UNIVERSITY NOT = LOW-VALUES
        MOVE FUNCTION LENGTH(FUNCTION TRIM(AR-UNIVERSITY)) TO VC-UNIVERSITY-LEN
        IF VC-UNIVERSITY-LEN >= VL-MIN-UNIV-LEN AND VC-UNIVERSITY-LEN <= VL-MAX-UNIV-LEN
            MOVE "Y" TO VF-UNIVERSITY
        END-IF
    END-IF
    EXIT PARAGRAPH.

VALIDATE-MAJOR.
    *> Check if major is not empty and within length limits
    IF AR-MAJOR NOT = SPACES AND AR-MAJOR NOT = LOW-VALUES
        MOVE FUNCTION LENGTH(FUNCTION TRIM(AR-MAJOR)) TO VC-MAJOR-LEN
        IF VC-MAJOR-LEN >= VL-MIN-MAJOR-LEN AND VC-MAJOR-LEN <= VL-MAX-MAJOR-LEN
            MOVE "Y" TO VF-MAJOR
        END-IF
    END-IF
    EXIT PARAGRAPH.

VALIDATE-GRADUATION-YEAR.
    *> Check if graduation year is 4 digits and within valid range
    IF AR-GRADUATION-YEAR >= VL-MIN-GRAD-YEAR AND AR-GRADUATION-YEAR <= VL-MAX-GRAD-YEAR
        MOVE "Y" TO VF-GRADUATION-YEAR
    END-IF
    EXIT PARAGRAPH.
